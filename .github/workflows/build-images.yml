name: Build Docker images

on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 4 * * SUN
  workflow_dispatch:

jobs:
  tier1:
    name: Build Tier 1 images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
          - { context: "alpine", tags: "1maa/alpine:3.18,1maa/alpine:latest", cache-tag: "1maa/alpine:3.18" }
          - { context: "beanstalkd", tags: "1maa/beanstalkd:latest" }
          - { context: "bitcoin", tags: "1maa/bitcoind:25.0", dockerfile: "bitcoin/alpine/Dockerfile" }
          - { context: "core-lightning", tags: "1maa/core-lightning:latest" }
          - { context: "erlang", tags: "1maa/erlang:24-alpine", build-args: "ERLANG_VERSION=24.3.4.13" }
          - { context: "erlang", tags: "1maa/erlang:25-alpine", build-args: "ERLANG_VERSION=25.3.2.5" }
          - { context: "erlang", tags: "1maa/erlang:26-alpine,1maa/erlang:latest", cache-tag: "1maa/erlang:26-alpine" }
          - { context: "lua/5.3", tags: "1maa/lua:5.3" }
          - { context: "lua/5.4", tags: "1maa/lua:5.4" }
          - { context: "protoc", tags: "1maa/protoc:latest" }
          - { context: "sakila", tags: "1maa/sakila:latest" }
          - { context: "selfsig", tags: "1maa/selfsig:latest" }
          - { context: "sleepy", tags: "1maa/sleepy:latest" }
          - { context: "sqlite", tags: "1maa/sqlite:latest" }
          - { context: "xhgui", tags: "1maa/xhgui:latest" }
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/docker-generic
        with:
          build-args: ${{ matrix.images.build-args || '' }}
          cache-tag: ${{ matrix.images.cache-tag || matrix.images.tags }}
          context: ${{ matrix.images.context }}
          docker-hub-pass: ${{ secrets.DOCKER_HUB_PASS }}
          docker-hub-user: 1maa
          dockerfile: ${{ matrix.images.dockerfile || format('{0}/Dockerfile', matrix.images.context) }}
          tags: ${{ matrix.images.tags }}

  tier2:
    name: Build Tier 2 images
    runs-on: ubuntu-latest
    needs:
      - tier1
    strategy:
      fail-fast: false
      matrix:
        images:
          - { context: "haproxy", tag: "1maa/haproxy:2.8" }
          - { context: "postgres", tag: "1maa/postgres:12-alpine", build-args: "POSTGRES_VERSION=12.16" }
          - { context: "postgres", tag: "1maa/postgres:13-alpine", build-args: "POSTGRES_VERSION=13.12" }
          - { context: "postgres", tag: "1maa/postgres:14-alpine", build-args: "POSTGRES_VERSION=14.9" }
          - { context: "postgres", tag: "1maa/postgres:15-alpine" }
          - { context: "sftp", tag: "1maa/sftp:latest" }
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/docker-generic
        with:
          build-args: ${{ matrix.images.build-args || '' }}
          cache-tag: ${{ matrix.images.tag }}
          context: ${{ matrix.images.context }}
          docker-hub-pass: ${{ secrets.DOCKER_HUB_PASS }}
          docker-hub-user: 1maa
          dockerfile: ${{ format('{0}/Dockerfile', matrix.images.context) }}
          tags: ${{ matrix.images.tag }}

  tier2-php:
    name: Build PHP images (Tier 2)
    runs-on: ubuntu-latest
    needs:
      - tier1
    strategy:
      fail-fast: false
      matrix:
        images:
          - { tag: "1maa/php:7.3", dev-tag: "1maa/php-dev:7.3", dockerfile: "php/7.3/Dockerfile" }
          - { tag: "1maa/php:7.4", dev-tag: "1maa/php-dev:7.4", dockerfile: "php/7.4/Dockerfile" }
          - { tag: "1maa/php:8.0", dev-tag: "1maa/php-dev:8.0", dockerfile: "php/8.0/Dockerfile" }
          - { tag: "1maa/php:8.1", dev-tag: "1maa/php-dev:8.1", dockerfile: "php/8.1/Dockerfile" }
          - { tag: "1maa/php:8.2", dev-tag: "1maa/php-dev:8.2", dockerfile: "php/8.2/Dockerfile" }
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/docker-php
        with:
          tag: ${{ matrix.images.tag }}
          dev-tag: ${{ matrix.images.dev-tag }}
          docker-hub-pass: ${{ secrets.DOCKER_HUB_PASS }}
          docker-hub-user: 1maa
          dockerfile: ${{ matrix.images.dockerfile }}
