stages:
  - tier1
  - tier2
  - tier3

services:
  - docker:dind

image: docker:latest

variables:
  DOCKER_BUILDKIT: 1
  DOCKER_TLS_CERTDIR: /certs

sanity-check:
  stage: .pre
  script:
    - docker info
    - docker version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS

alpine:
  stage: tier1
  variables:
    CONTEXT: alpine
    IMAGE: 1maa/alpine:3.14
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

beanstalkd:
  stage: tier1
  allow_failure: true
  variables:
    CONTEXT: beanstalkd
    IMAGE: 1maa/beanstalkd:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

erlang:
  stage: tier1
  variables:
    CONTEXT: erlang
    IMAGE: 1maa/erlang:23-alpine
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

gnat-9:
  stage: tier1
  variables:
    CONTEXT: gnat/9
    IMAGE: 1maa/fsf-gnat:9
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

gnat-10:
  stage: tier1
  variables:
    CONTEXT: gnat/10
    IMAGE: 1maa/fsf-gnat:10
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

haproxy:
  stage: tier1
  variables:
    CONTEXT: haproxy
    IMAGE: 1maa/haproxy:2.4
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

jekyll:
  stage: tier1
  variables:
    CONTEXT: jekyll
    IMAGE: 1maa/jekyll:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

mariadb:
  stage: tier1
  variables:
    CONTEXT: mariadb
    IMAGE: 1maa/mariadb:10.4
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

mysql-5.7:
  stage: tier1
  variables:
    CONTEXT: mysql
    IMAGE: 1maa/mysql:5.7
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile.57 $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

mysql-8.0:
  stage: tier1
  variables:
    CONTEXT: mysql
    IMAGE: 1maa/mysql:8.0
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile.80 $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

postgres:
  stage: tier1
  variables:
    CONTEXT: postgres
    IMAGE: 1maa/postgres:13-alpine
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

postgres-src:
  stage: tier1
  variables:
    CONTEXT: postgres
    IMAGE: 1maa/postgres:13-src
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile.src $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

sleepy:
  stage: tier1
  variables:
    CONTEXT: sleepy
    IMAGE: 1maa/sleepy:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

swipl:
  stage: tier1
  variables:
    CONTEXT: swipl
    IMAGE: 1maa/swipl:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

xhgui:
  stage: tier1
  variables:
    CONTEXT: xhgui
    IMAGE: 1maa/xhgui:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-5.6:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:5.6
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/5.6/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.0:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:7.0
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.0/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.1:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:7.1
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.1/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.2:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:7.2
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.2/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.3:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:7.3
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.3/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.4:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:7.4
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.4/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-8.0:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:8.0
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/8.0/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-8.1:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: php
    IMAGE: 1maa/php:8.1
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/8.1/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

sakila:
  stage: tier2
  needs:
    - mysql-8.0
  variables:
    CONTEXT: sakila
    IMAGE: 1maa/sakila:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

selfsig:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: selfsig
    IMAGE: 1maa/selfsig:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

sftp:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: sftp
    IMAGE: 1maa/sftp:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

sqlite:
  stage: tier2
  needs:
    - alpine
  variables:
    CONTEXT: sqlite
    IMAGE: 1maa/sqlite:latest
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-5.6-dev:
  stage: tier3
  needs:
    - php-5.6
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:5.6
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/5.6/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.0-dev:
  stage: tier3
  needs:
    - php-7.0
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:7.0
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.0/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.1-dev:
  stage: tier3
  needs:
    - php-7.1
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:7.1
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.1/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.2-dev:
  stage: tier3
  needs:
    - php-7.2
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:7.2
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.2/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.3-dev:
  stage: tier3
  needs:
    - php-7.3
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:7.3
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.3/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-7.4-dev:
  stage: tier3
  needs:
    - php-7.4
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:7.4
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/7.4/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-8.0-dev:
  stage: tier3
  needs:
    - php-8.0
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:8.0
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/8.0/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

php-8.1-dev:
  stage: tier3
  needs:
    - php-8.1
  variables:
    CONTEXT: php-dev
    IMAGE: 1maa/php-dev:8.1
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/8.1/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE

roadrunner:
  stage: tier3
  needs:
    - php-8.0
  variables:
    CONTEXT: roadrunner
    IMAGE: 1maa/roadrunner:8.0
  script:
    - docker build --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $IMAGE
